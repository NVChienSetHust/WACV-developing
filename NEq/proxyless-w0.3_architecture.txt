Sequential(
  (0): QuantizedConv2dDiff(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
  (1): Sequential(
    (0): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16)
        (1): QuantizedConv2dDiff(16, 8, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (1): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(8, 24, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(24, 24, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=24)
        (2): QuantizedConv2dDiff(24, 16, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (2): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 48, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
        (2): QuantizedConv2dDiff(48, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (3): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 48, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(48, 48, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=48)
        (2): QuantizedConv2dDiff(48, 16, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (4): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 48, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48)
        (2): QuantizedConv2dDiff(48, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (5): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 48, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(48, 48, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=48)
        (2): QuantizedConv2dDiff(48, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (6): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 48, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(48, 48, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=48)
        (2): QuantizedConv2dDiff(48, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (7): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(16, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(96, 96, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=96)
        (2): QuantizedConv2dDiff(96, 24, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (8): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(24, 72, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72)
        (2): QuantizedConv2dDiff(72, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (9): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(24, 72, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72)
        (2): QuantizedConv2dDiff(72, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (10): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(24, 72, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(72, 72, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=72)
        (2): QuantizedConv2dDiff(72, 24, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (11): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(24, 144, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(144, 144, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=144)
        (2): QuantizedConv2dDiff(144, 32, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (12): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(32, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=96)
        (2): QuantizedConv2dDiff(96, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (13): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(32, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=96)
        (2): QuantizedConv2dDiff(96, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (14): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(32, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=96)
        (2): QuantizedConv2dDiff(96, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (15): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(32, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(192, 192, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=192)
        (2): QuantizedConv2dDiff(192, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (16): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(64, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
        (2): QuantizedConv2dDiff(384, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (17): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(64, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
        (2): QuantizedConv2dDiff(192, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (18): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(64, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
        (2): QuantizedConv2dDiff(192, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (q_add): QuantizedElementwiseDiff()
    )
    (19): QuantizedMbBlockDiff(
      (conv): Sequential(
        (0): QuantizedConv2dDiff(64, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): QuantizedConv2dDiff(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
        (2): QuantizedConv2dDiff(384, 96, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (2): Identity()
  (3): QuantizedAvgPoolDiff()
  (4): ScaledLinear(in_features=96, out_features=10, bias=True)
  (5): Flatten(start_dim=1, end_dim=-1)
)
